{"ast":null,"code":"var _jsxFileName = \"/home/sudhanshu/myfiles/project/react_crash_course/contact-app/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { v4 as uuid_v4 } from 'uuid';\nimport api from \"../api/contacts\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport ContactDetails from \"./ContactDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const LOCAL_STORAGE_KEY = 'contacts';\n  const [contacts, setContacts] = useState([]); //hook\n  //retrieve contacts \n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\"); //apppend /contact to base url\n\n    return response.data;\n  };\n\n  const addContactHandler = contact => {\n    console.log(contact);\n    setContacts([...contacts, {\n      id: uuid_v4(),\n      ...contact\n    }]); ///set contacts from addContacts \n  };\n\n  const removeContactHandler = id => {\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  useEffect(() => {\n    // const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if(retrieveContacts){\n    //   setContacts(retrieveContacts);\n    // }\n    const getAllContacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setCon;\n    };\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(ContactList, { ...props,\n            contacts: contacts,\n            getContactId: removeContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          render: props => /*#__PURE__*/_jsxDEV(AddContact, { ...props,\n            getNewContact: addContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact/:id\",\n          component: ContactDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JiLBYXwRkRBFtooeSEBeIxWnzEk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sudhanshu/myfiles/project/react_crash_course/contact-app/src/components/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","v4","uuid_v4","api","Header","AddContact","ContactList","ContactDetails","App","LOCAL_STORAGE_KEY","contacts","setContacts","retrieveContacts","response","get","data","addContactHandler","contact","console","log","id","removeContactHandler","newContactList","filter","getAllContacts","allContacts","setCon","localStorage","setItem","JSON","stringify","props"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport { v4 as uuid_v4 } from 'uuid';\nimport  api from \"../api/contacts\";  \nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport ContactDetails from \"./ContactDetails\"\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = 'contacts'\n  const [contacts , setContacts] = useState([]); //hook\n\n  //retrieve contacts \n  const retrieveContacts = async () =>{\n    const response = await api.get(\"/contacts\"); //apppend /contact to base url\n    return response.data;\n\n    }\n\n  const addContactHandler = (contact)=>{\n    console.log(contact)\n    setContacts([...contacts,{id: uuid_v4(), ...contact}]);  ///set contacts from addContacts \n  \n  }\n\n  const removeContactHandler = (id) => {\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  }\n  useEffect(() =>{  \n    // const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if(retrieveContacts){\n    //   setContacts(retrieveContacts);\n    // }\n    const getAllContacts = async ()=>{\n      const allContacts = await retrieveContacts();\n      if(allContacts) setCon\n\n    }\n  },[])\n\n  useEffect(() =>{\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts))\n  },[contacts])\n\n  return (\n    <div className=\"ui container\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route\n           path=\"/\"\n           exact\n           render = {(props) =>(\n            <ContactList \n              {...props}\n              contacts={contacts}\n               getContactId={removeContactHandler}\n            />\n             )}\n            />\n          <Route\n           path=\"/add\"\n           render = {(props) =>(\n            <AddContact \n              {...props}\n              getNewContact={addContactHandler} \n            />\n             )}\n          />\n          <Route path=\"/contact/:id\" component={ContactDetails}/> \n        \n        </Switch>\n      </Router>\n\n     \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}