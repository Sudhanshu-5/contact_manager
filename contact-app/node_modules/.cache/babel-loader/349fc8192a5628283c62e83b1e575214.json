{"ast":null,"code":"var _jsxFileName = \"/home/sudhanshu/myfiles/project/react_crash_course/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowseRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { v4 as uuid_v4 } from 'uuid';\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const LOCAL_STORAGE_KEY = 'contacts';\n  const [contacts, setContacts] = useState([]); //hook\n\n  const addContactHandler = contact => {\n    console.log(contact);\n    setContacts([...contacts, {\n      id: uuid_v4(),\n      ...contact\n    }]); ///set contacts from addContacts \n  };\n\n  const removeContactHandler = id => {\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  useEffect(() => {\n    const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n    if (retrieveContacts) {\n      setContacts(retrieveContacts);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: [/*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JiLBYXwRkRBFtooeSEBeIxWnzEk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sudhanshu/myfiles/project/react_crash_course/src/components/App.js"],"names":["React","useState","useEffect","BrowseRouter","Router","Switch","Route","v4","uuid_v4","Header","AddContact","ContactList","App","LOCAL_STORAGE_KEY","contacts","setContacts","addContactHandler","contact","console","log","id","removeContactHandler","newContactList","filter","retrieveContacts","JSON","parse","localStorage","getItem","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,YAAY,IAAIC,MAAxB,EAAgCC,MAAhC,EAAwCC,KAAxC,QAAoD,kBAApD;AACA,OAAO,WAAP;AACA,SAASC,EAAE,IAAIC,OAAf,QAA8B,MAA9B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,iBAAiB,GAAG,UAA1B;AACA,QAAM,CAACC,QAAD,EAAYC,WAAZ,IAA2Bd,QAAQ,CAAC,EAAD,CAAzC,CAFa,CAEkC;;AAE/C,QAAMe,iBAAiB,GAAIC,OAAD,IAAW;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAF,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAa;AAACM,MAAAA,EAAE,EAAEZ,OAAO,EAAZ;AAAgB,SAAGS;AAAnB,KAAb,CAAD,CAAX,CAFmC,CAEsB;AAE1D,GAJD;;AAMA,QAAMI,oBAAoB,GAAID,EAAD,IAAQ;AACnC,UAAME,cAAc,GAAGR,QAAQ,CAACS,MAAT,CAAiBN,OAAD,IAAa;AAClD,aAAOA,OAAO,CAACG,EAAR,KAAeA,EAAtB;AACD,KAFsB,CAAvB;AAIAL,IAAAA,WAAW,CAACO,cAAD,CAAX;AACD,GAND;;AAOApB,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMsB,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBf,iBAArB,CAAX,CAAzB;;AACA,QAAGW,gBAAH,EAAoB;AAClBT,MAAAA,WAAW,CAACS,gBAAD,CAAX;AACD;AACF,GALQ,EAKP,EALO,CAAT;AAOAtB,EAAAA,SAAS,CAAC,MAAK;AACbyB,IAAAA,YAAY,CAACE,OAAb,CAAqBhB,iBAArB,EAAwCY,IAAI,CAACK,SAAL,CAAehB,QAAf,CAAxC;AACD,GAFQ,EAEP,CAACA,QAAD,CAFO,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GArCQF,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {BrowseRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport { v4 as uuid_v4 } from 'uuid';\n\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = 'contacts'\n  const [contacts , setContacts] = useState([]); //hook\n\n  const addContactHandler = (contact)=>{\n    console.log(contact)\n    setContacts([...contacts,{id: uuid_v4(), ...contact}]);  ///set contacts from addContacts \n  \n  }\n\n  const removeContactHandler = (id) => {\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  }\n  useEffect(() =>{\n    const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if(retrieveContacts){\n      setContacts(retrieveContacts);\n    }\n  },[])\n\n  useEffect(() =>{\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts))\n  },[contacts])\n\n  return (\n    <div className=\"ui container\">\n      <Router>\n        \n      </Router>\n      <Header />\n     \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}